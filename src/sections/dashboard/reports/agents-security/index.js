import React, { useEffect, useState } from 'react';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import Grid from '@mui/material/Grid';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import IconButton from '@mui/material/IconButton';
import Tooltip from '@mui/material/Tooltip';
import Skeleton from '@mui/material/Skeleton';
import Security from '@mui/icons-material/Security';
import Dashboard from '@mui/icons-material/Dashboard';
import Group from '@mui/icons-material/Group';
import Assignment from '@mui/icons-material/Assignment';
import Refresh from '@mui/icons-material/Refresh';
import { reportsApi } from 'src/api/reports';
import { TABS } from './constants';
import OverviewTab from './components/overview-tab';
import AgentsTab from './components/agents-tab';
import SecurityTab from './components/security-tab';
import RecommendationsTab from './components/recommendations-tab';

const AgentsSecurityDashboard = ({endPoint}) => {
  const [securityData, setSecurityData] = useState({});
  const [loading, setLoading] = useState(true);
  const [tabValue, setTabValue] = useState(TABS.OVERVIEW);
  const report = securityData?.report || {};

  const getSecurity = async () => {
    try {
      setLoading(true);
      const url = endPoint === "overview" ?
        { type: "all_agents" } :
        endPoint === "full_intelligence" ?
          { type: "all_agents", readable_dates: true, include_explanations: true } :
          { type: "all_agents", readable_dates: false, include_explanations: true };
      const res = await reportsApi.getSecurity(url);
      setSecurityData(res);
    } catch (error) {
      setSecurityData({});
      console.error('Error fetching security data:', error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    getSecurity();
  }, [endPoint]);

  const handleTabChange = (event, newValue) => {
    setTabValue(newValue);
  };

  const renderTabContent = () => {
    switch (tabValue) {
      case TABS.OVERVIEW:
        return <OverviewTab report={report} loading={loading} />;
      case TABS.AGENTS:
        return <AgentsTab report={report} loading={loading} />;
      case TABS.SECURITY:
        return <SecurityTab report={report} loading={loading} />;
      case TABS.RECOMMENDATIONS:
        return <RecommendationsTab report={report} loading={loading} />;
      default:
        return <OverviewTab report={report} loading={loading} />;
    }
  };

  return (
    <Box sx={{ flexGrow: 1, bgcolor: 'background.default', minHeight: '100vh', py: { xs: 1, md: 3 } }}>
      {/* Header */}
      <Box sx={{ mb: 3, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>
        <Box display="flex" justifyContent="space-between" alignItems="flex-start">
          <Box>
            {loading ? (
              <Box>
                <Skeleton variant="text" width={300} height={28} />
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>
                  <Skeleton variant="text" width={120} height={22} />
                  <Skeleton variant="circular" width={6} height={4} />
                  <Skeleton variant="text" width={160} height={22} />
                </Box>
              </Box>
            ) : (
              <Box>
                <Typography variant="h6" color="primary" sx={{ fontWeight: 600 }}>
                  {report?.report_type}
                </Typography>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, color: 'text.secondary', my: 0.5 }}>
                  <Typography variant="body2" sx={{ fontWeight: 500 }}>
                    Generated by {report?.generated_by}
                  </Typography>
                  <Box sx={{ width: 3, height: 3, borderRadius: '50%', bgcolor: 'text.disabled' }} />
                  <Typography variant="body2">
                    {new Date(report?.generated_at).toLocaleString(undefined, {
                      dateStyle: 'medium',
                      timeStyle: 'short'
                    })}
                    </Typography>
                    <Typography variant="caption" sx={{ 
                    color: 'text.secondary',
                    display: 'inline-flex',
                    alignItems: 'center',
                    gap: 0.5,
                    bgcolor: 'action.hover',
                    px: 1,
                    py: 0.25,
                    borderRadius: 1
                  }}>
                    Version {report?.report_metadata?.report_version}
                  </Typography>
                </Box>
              </Box>
            )}
          </Box>
          <Tooltip title="Refresh Report" placement="left">
            <IconButton 
              size="small"
              color="primary"
              onClick={() => getSecurity()}
              disabled={loading}
              sx={{ 
                bgcolor: 'background.default',
                '&:hover': { bgcolor: 'action.hover' },
                transition: 'all 0.2s'
              }}
            >
              <Refresh fontSize="small" />
            </IconButton>
          </Tooltip>
        </Box>
      </Box>

      {/* Navigation Tabs */}
      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>
        <Tabs value={tabValue} onChange={handleTabChange}>
          <Tab label="Overview" sx={{width:"25%", px: 3}} icon={<Dashboard />} />
          <Tab label="Agents" sx={{width:"25%", px: 3}} icon={<Group />} />
          <Tab label="Security" sx={{width:"25%", px: 3}} icon={<Security />} />
          <Tab label="Recommendations" sx={{width:"25%", px: 3}} icon={<Assignment />} />
        </Tabs>
      </Box>

      {/* Tab Content */}
      <Box>
        {renderTabContent()}
      </Box>

      {/* Report Metadata */}
      <Box sx={{ mt: 4, p: 3, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>
        {loading ? (
          <Box>
            <Skeleton variant="text" width="80%" height={24} />
            <Skeleton variant="text" width="70%" height={24} sx={{ mt: 1 }} />
            <Skeleton variant="text" width="60%" height={24} sx={{ mt: 1 }} />
          </Box>
        ) : (
          <Box>
            <Box container spacing={3}>
              <Typography variant="subtitle2" color="textPrimary" gutterBottom>
                Report Details
              </Typography>
              <Grid container>
                <Grid item xs={12} md={6}>
                  <Typography variant="body2" color="textSecondary">
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Period:</span> {report?.report_period}
                  </Typography>
                  <Typography variant="body2" color="textSecondary" sx={{ mt: 1 }}>
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Next Review:</span> {report?.report_metadata?.next_recommended_review}
                  </Typography>
                    
                  <Typography variant="body2" color="textSecondary" sx={{ mt: 1 }}>
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Data Sources:</span> {report?.report_metadata?.data_sources?.join(', ')}
                  </Typography>
                  <Typography variant="body2" color="textSecondary" sx={{ mt: 1 }}>
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Analysis Depth:</span> {report?.report_metadata?.analysis_depth}
                  </Typography>
                </Grid>

                <Grid item xs={12} md={6}>
                  <Typography variant="body2" color="textSecondary">
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Security Context:</span> {report?.security_context}
                  </Typography>
                  <Typography variant="body2" color="textSecondary" sx={{ mt: 1 }}>
                    <span style={{ fontStyle: 'italic', textDecoration: 'underline' }}>Account Context:</span> {report?.account_context}
                  </Typography>
                </Grid>
              </Grid>
            </Box>
          </Box>
        )}
      </Box>
    </Box>
  );
};

export default AgentsSecurityDashboard; 